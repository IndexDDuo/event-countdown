{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Text, CheckBox } from \"@rneui/themed\";\nimport * as Font from \"expo-font\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport { StackActions } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { ButtonGroup } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref2 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar _useState = useState({\n    eventname: \"\",\n    eventDate: \"\",\n    eventAllDay: false,\n    eventReminder: false,\n    eventDescription: \"\"\n  }),\n  _useState2 = _slicedToArray(_useState, 2),\n  eventData = _useState2[0],\n  setEventData = _useState2[1];\nexport { eventData, setEventData };\nexport default function Edit(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  cacheFonts([FontAwesome.font]);\n  var _route$params = route.params,\n    modalVisible = _route$params.modalVisible,\n    setModalVisible = _route$params.setModalVisible;\n  useEffect(function () {\n    console.log(\"modalVisible is \" + modalVisible + \" in Edit.\");\n  }, [setModalVisible]);\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(ScrollView, {\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Event Name:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(e) {\n            setEventData(_objectSpread(_objectSpread({}, eventData), {}, {\n              eventName: e\n            }));\n          }\n        }), _jsx(Text, {\n          children: \"Event Date:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(e) {\n            return setEventData(_objectSpread(_objectSpread({}, eventData), {}, {\n              eventDate: e\n            }));\n          }\n        }), _jsx(CheckBox, {\n          title: \"All day?\",\n          checked: eventData.eventAllDay,\n          onPress: function onPress() {\n            return setEventData(_objectSpread(_objectSpread({}, eventData), {}, {\n              eventAllDay: !eventData.eventAllDay\n            }));\n          }\n        }), _jsx(CheckBox, {\n          title: \"Reminder?\",\n          checked: eventData.eventReminder,\n          onPress: function onPress() {\n            return setEventData(_objectSpread(_objectSpread({}, eventData), {}, {\n              eventReminder: !eventData.eventReminder\n            }));\n          }\n        }), _jsx(Text, {\n          children: \"Event Description:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(e) {\n            setEventData(_objectSpread(_objectSpread({}, eventData), {}, {\n              eventDescription: e\n            }));\n          }\n        })]\n      })\n    }), _jsx(Modal, {\n      animationType: \"none\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n        setModalVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Saved!\"\n          }), _jsx(Pressable, {\n            style: [styles.button, styles.buttonClose],\n            onPress: function onPress() {\n              setModalVisible(false);\n              navigation.navigate(\"Home\");\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Ok\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontWeight: \"bold\"\n  },\n  input: {\n    borderWidth: 1\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    width: 80\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["Button","Text","CheckBox","Font","FontAwesome","React","useState","useCallback","useEffect","useMemo","StackActions","SafeAreaView","ButtonGroup","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref2","font","loadAsync","_x2","_useState","eventname","eventDate","eventAllDay","eventReminder","eventDescription","_useState2","_slicedToArray","eventData","setEventData","Edit","_ref","navigation","route","_route$params","params","modalVisible","setModalVisible","console","log","children","ScrollView","View","TextInput","style","styles","input","onChangeText","e","_objectSpread","eventName","title","checked","onPress","Modal","animationType","transparent","visible","onRequestClose","Alert","alert","centeredView","modalView","modalText","Pressable","button","buttonClose","navigate","textStyle","StyleSheet","create","container","flex","backgroundColor","alignItems","fontWeight","borderWidth","justifyContent","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","buttonOpen","color","textAlign","marginBottom"],"sources":["C:/Users/29353/OneDrive/Documents/dig4639c/event-countdown-app/screens/Edit.js"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  TextInput,\r\n  View,\r\n  ScrollView,\r\n  Modal,\r\n  Pressable,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { Button, Text, CheckBox } from \"@rneui/themed\";\r\nimport * as Font from \"expo-font\";\r\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\r\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport { StackActions } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { ButtonGroup } from \"react-native-elements\";\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font));\r\n}\r\n\r\nexport const [eventData, setEventData] = useState({\r\n  eventname: \"\",\r\n  eventDate: \"\",\r\n  eventAllDay: false,\r\n  eventReminder: false,\r\n  eventDescription: \"\",\r\n});\r\n\r\nexport default function Edit({ navigation, route }) {\r\n  cacheFonts([FontAwesome.font]);\r\n\r\n  const { modalVisible, setModalVisible } = route.params;\r\n\r\n  // // handling the all day? checkbox\r\n  // const [allDayChecked, setAllDayChecked] = useState(false);\r\n\r\n  // // handling the reminder checkbox\r\n  // const [reminderChecked, setReminderChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(`modalVisible is ${modalVisible} in Edit.`);\r\n  }, [setModalVisible]);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView>\r\n        <View>\r\n          <Text>Event Name:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={(e) => {\r\n              setEventData({ ...eventData, eventName: e });\r\n            }}\r\n          ></TextInput>\r\n          <Text>Event Date:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={(e) => setEventData({ ...eventData, eventDate: e })}\r\n          ></TextInput>\r\n\r\n          <CheckBox\r\n            title={\"All day?\"}\r\n            checked={eventData.eventAllDay}\r\n            onPress={() =>\r\n              setEventData({\r\n                ...eventData,\r\n                eventAllDay: !eventData.eventAllDay,\r\n              })\r\n            }\r\n          />\r\n          <CheckBox\r\n            title={\"Reminder?\"}\r\n            checked={eventData.eventReminder}\r\n            onPress={() =>\r\n              setEventData({\r\n                ...eventData,\r\n                eventReminder: !eventData.eventReminder,\r\n              })\r\n            }\r\n          />\r\n          <Text>Event Description:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            onChangeText={(e) => {\r\n              setEventData({ ...eventData, eventDescription: e });\r\n            }}\r\n          ></TextInput>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Modal\r\n        animationType=\"none\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Saved!</Text>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n              onPress={() => {\r\n                setModalVisible(false);\r\n                navigation.navigate(\"Home\");\r\n              }}\r\n            >\r\n              <Text style={styles.textStyle}>Ok</Text>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n    width: 80,\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}