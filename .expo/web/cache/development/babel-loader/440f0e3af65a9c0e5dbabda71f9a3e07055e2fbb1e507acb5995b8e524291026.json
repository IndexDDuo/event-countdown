{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport Home from \"./screens/Home.js\";\nimport Detail from \"./screens/Detail.js\";\nimport Edit from \"./screens/Edit.js\";\nimport { readFile } from \"./saveData.js\";\nimport eventData from \"./eventData.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar handleSave = function handleSave(modalVisible, setModalVisible, navigation, eventData, setEventData) {\n  setModalVisible(true);\n  console.log(\"save button is pressed. app.js  \" + modalVisible);\n  navigation.navigate(\"Edit\", {\n    modalVisible: true\n  });\n  setEventData(eventData);\n  console.log(eventData);\n  readFile(\"eventData.json\");\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState({\n      eventName: \"\",\n      eventDate: \"\",\n      eventAllDay: false,\n      eventReminder: false,\n      eventDescription: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    eventData = _useState4[0],\n    setEventData = _useState4[1];\n  useEffect(function () {\n    console.log(\"App.js \" + modalVisible);\n  }, [modalVisible]);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Add\",\n                onPress: function onPress() {\n                  navigation.navigate(\"Edit\");\n                }\n              });\n            }\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: Detail\n      }), _jsx(Stack.Screen, {\n        name: \"Edit\",\n        component: Edit,\n        options: function options(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Save\",\n                onPress: function onPress() {\n                  handleSave(modalVisible, setModalVisible, navigation, eventData, setEventData);\n                }\n              });\n            }\n          };\n        },\n        initialParams: {\n          setModalVisible: setModalVisible,\n          modalVisible: modalVisible,\n          eventData: eventData,\n          setEventData: setEventData\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","Button","StyleSheet","Text","View","NavigationContainer","createNativeStackNavigator","React","useState","useCallback","useEffect","useMemo","Home","Detail","Edit","readFile","eventData","jsx","_jsx","jsxs","_jsxs","Stack","handleSave","modalVisible","setModalVisible","navigation","setEventData","console","log","navigate","App","_useState","_useState2","_slicedToArray","_useState3","eventName","eventDate","eventAllDay","eventReminder","eventDescription","_useState4","children","Navigator","initialRouteName","Screen","name","component","options","_ref","headerRight","title","onPress","_ref2","initialParams","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/29353/OneDrive/Documents/dig4639c/event-countdown-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport Home from \"./screens/Home.js\";\r\nimport Detail from \"./screens/Detail.js\";\r\nimport Edit from \"./screens/Edit.js\";\r\nimport { readFile } from \"./saveData.js\";\r\nimport eventData from \"./eventData.json\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n// handling modal\r\nconst handleSave = (\r\n  modalVisible,\r\n  setModalVisible,\r\n  navigation,\r\n  eventData,\r\n  setEventData\r\n) => {\r\n  setModalVisible(true);\r\n  console.log(`save button is pressed. app.js  ${modalVisible}`);\r\n  navigation.navigate(\"Edit\", { modalVisible: true });\r\n  setEventData(eventData);\r\n  console.log(eventData);\r\n  readFile(\"eventData.json\");\r\n};\r\n\r\nexport default function App() {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const [eventData, setEventData] = useState({\r\n    eventName: \"\",\r\n    eventDate: \"\",\r\n    eventAllDay: false,\r\n    eventReminder: false,\r\n    eventDescription: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(`App.js ${modalVisible}`);\r\n  }, [modalVisible]);\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={Home}\r\n          options={({ navigation }) => ({\r\n            headerRight: () => (\r\n              <Button\r\n                title=\"Add\"\r\n                onPress={() => {\r\n                  navigation.navigate(\"Edit\");\r\n                }}\r\n              ></Button>\r\n            ),\r\n          })}\r\n        />\r\n        <Stack.Screen name=\"Detail\" component={Detail} />\r\n        <Stack.Screen\r\n          name=\"Edit\"\r\n          component={Edit}\r\n          options={({ navigation }) => ({\r\n            headerRight: () => (\r\n              <Button\r\n                title=\"Save\"\r\n                onPress={() => {\r\n                  handleSave(\r\n                    modalVisible,\r\n                    setModalVisible,\r\n                    navigation,\r\n                    eventData,\r\n                    setEventData\r\n                  );\r\n                }}\r\n              ></Button>\r\n            ),\r\n          })}\r\n          initialParams={{\r\n            setModalVisible: setModalVisible,\r\n            modalVisible: modalVisible,\r\n            eventData: eventData,\r\n            setEventData: setEventData,\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}