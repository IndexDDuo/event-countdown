{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport Home from \"./screens/Home.js\";\nimport Detail from \"./screens/Detail.js\";\nimport Edit from \"./screens/Edit.js\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar handleSave = function handleSave(modalVisible, setModalVisible, navigation, eventData, setEventData) {\n  setModalVisible(true);\n  console.log(\"save button is pressed. app.js  \" + modalVisible);\n  navigation.navigate(\"Edit\", {\n    modalVisible: true\n  });\n  setEventData(eventData);\n  console.log(eventData);\n  readFile(\"../eventData.json\");\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState({\n      eventName: \"\",\n      eventDate: \"\",\n      eventAllDay: false,\n      eventReminder: false,\n      eventDescription: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    eventData = _useState4[0],\n    setEventData = _useState4[1];\n  useEffect(function () {\n    console.log(\"App.js \" + modalVisible);\n  }, [modalVisible]);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Add\",\n                onPress: function onPress() {\n                  navigation.navigate(\"Edit\");\n                }\n              });\n            }\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: Detail\n      }), _jsx(Stack.Screen, {\n        name: \"Edit\",\n        component: Edit,\n        options: function options(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Save\",\n                onPress: function onPress() {\n                  handleSave(modalVisible, setModalVisible, navigation, eventData, setEventData);\n                }\n              });\n            }\n          };\n        },\n        initialParams: {\n          setModalVisible: setModalVisible,\n          modalVisible: modalVisible,\n          eventData: eventData,\n          setEventData: setEventData\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","Button","StyleSheet","Text","View","NavigationContainer","createNativeStackNavigator","React","useState","useCallback","useEffect","useMemo","Home","Detail","Edit","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Stack","handleSave","modalVisible","setModalVisible","navigation","eventData","setEventData","console","log","navigate","readFile","App","_useState","_useState2","_slicedToArray","_useState3","eventName","eventDate","eventAllDay","eventReminder","eventDescription","_useState4","children","Navigator","initialRouteName","Screen","name","component","options","_ref","headerRight","title","onPress","_ref2","initialParams","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/29353/OneDrive/Documents/dig4639c/event-countdown-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport Home from \"./screens/Home.js\";\nimport Detail from \"./screens/Detail.js\";\nimport Edit from \"./screens/Edit.js\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Stack = createNativeStackNavigator();\n\n// handling modal\nconst handleSave = (\n  modalVisible,\n  setModalVisible,\n  navigation,\n  eventData,\n  setEventData\n) => {\n  setModalVisible(true);\n  console.log(`save button is pressed. app.js  ${modalVisible}`);\n  navigation.navigate(\"Edit\", { modalVisible: true });\n  setEventData(eventData);\n  console.log(eventData);\n  readFile(\"../eventData.json\");\n};\n\nexport default function App() {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const [eventData, setEventData] = useState({\n    eventName: \"\",\n    eventDate: \"\",\n    eventAllDay: false,\n    eventReminder: false,\n    eventDescription: \"\",\n  });\n\n  useEffect(() => {\n    console.log(`App.js ${modalVisible}`);\n  }, [modalVisible]);\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={({ navigation }) => ({\n            headerRight: () => (\n              <Button\n                title=\"Add\"\n                onPress={() => {\n                  navigation.navigate(\"Edit\");\n                }}\n              ></Button>\n            ),\n          })}\n        />\n        <Stack.Screen name=\"Detail\" component={Detail} />\n        <Stack.Screen\n          name=\"Edit\"\n          component={Edit}\n          options={({ navigation }) => ({\n            headerRight: () => (\n              <Button\n                title=\"Save\"\n                onPress={() => {\n                  handleSave(\n                    modalVisible,\n                    setModalVisible,\n                    navigation,\n                    eventData,\n                    setEventData\n                  );\n                }}\n              ></Button>\n            ),\n          })}\n          initialParams={{\n            setModalVisible: setModalVisible,\n            modalVisible: modalVisible,\n            eventData: eventData,\n            setEventData: setEventData,\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}