{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport Home from \"./screens/Home.js\";\nimport Detail from \"./screens/Detail.js\";\nimport Edit from \"./screens/Edit.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  function toggleModalVisibility(setModalVisible) {\n    setModalVisible(function (prevModalVisible) {\n      return !prevModalVisible;\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Edit\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Add\",\n                onPress: function onPress() {\n                  navigation.navigate(\"Edit\");\n                }\n              });\n            }\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: Detail\n      }), _jsx(Stack.Screen, {\n        name: \"Edit\",\n        component: Edit,\n        options: function options(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Save\",\n                onPress: function onPress() {\n                  setModalVisible(!modalVisible);\n                }\n              });\n            }\n          };\n        },\n        initialParams: {\n          setModalVisible: setModalVisible,\n          modalVisible: modalVisible\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","Button","StyleSheet","Text","View","NavigationContainer","createNativeStackNavigator","React","useState","useCallback","useEffect","useMemo","Home","Detail","Edit","jsx","_jsx","jsxs","_jsxs","App","Stack","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","toggleModalVisibility","prevModalVisible","children","Navigator","initialRouteName","Screen","name","component","options","_ref","navigation","headerRight","title","onPress","navigate","_ref2","initialParams","styles","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/29353/OneDrive/Documents/dig4639c/event-countdown-app/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport Home from \"./screens/Home.js\";\nimport Detail from \"./screens/Detail.js\";\nimport Edit from \"./screens/Edit.js\";\n\nexport default function App() {\n  const Stack = createNativeStackNavigator();\n\n  // handling modal\n  const [modalVisible, setModalVisible] = useState(false);\n\n  function toggleModalVisibility(setModalVisible) {\n    setModalVisible((prevModalVisible) => !prevModalVisible);\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Edit\">\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={({ navigation }) => ({\n            headerRight: () => (\n              <Button\n                title=\"Add\"\n                onPress={() => {\n                  navigation.navigate(\"Edit\");\n                }}\n              ></Button>\n            ),\n          })}\n        />\n        <Stack.Screen name=\"Detail\" component={Detail} />\n        <Stack.Screen\n          name=\"Edit\"\n          component={Edit}\n          options={({ navigation }) => ({\n            headerRight: () => (\n              <Button\n                title=\"Save\"\n                onPress={() => {\n                  setModalVisible(!modalVisible);\n                  // toggleModalVisibility();\n                  // navigation.navigate(\"Home\");\n                }}\n              ></Button>\n            ),\n          })}\n          initialParams={{\n            setModalVisible: setModalVisible,\n            modalVisible: modalVisible,\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACxE,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,IAAI;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,KAAK,GAAGd,0BAA0B,EAAE;EAG1C,IAAAe,SAAA,GAAwCb,QAAQ,CAAC,KAAK,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,SAASI,qBAAqBA,CAACD,eAAe,EAAE;IAC9CA,eAAe,CAAC,UAACE,gBAAgB;MAAA,OAAK,CAACA,gBAAgB;IAAA,EAAC;EAC1D;EAEA,OACEX,IAAA,CAACX,mBAAmB;IAAAuB,QAAA,EAClBV,KAAA,CAACE,KAAK,CAACS,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAF,QAAA,GACtCZ,IAAA,CAACI,KAAK,CAACW,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAErB,IAAK;QAChBsB,OAAO,EAAE,SAAAA,QAAAC,IAAA;UAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;UAAA,OAAQ;YAC5BC,WAAW,EAAE,SAAAA,YAAA;cAAA,OACXrB,IAAA,CAACf,MAAM;gBACLqC,KAAK,EAAC,KAAK;gBACXC,OAAO,EAAE,SAAAA,QAAA,EAAM;kBACbH,UAAU,CAACI,QAAQ,CAAC,MAAM,CAAC;gBAC7B;cAAE,EACM;YAAA;UAEd,CAAC;QAAA;MAAE,EACH,EACFxB,IAAA,CAACI,KAAK,CAACW,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEpB;MAAO,EAAG,EACjDG,IAAA,CAACI,KAAK,CAACW,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEnB,IAAK;QAChBoB,OAAO,EAAE,SAAAA,QAAAO,KAAA;UAAA,IAAGL,UAAU,GAAAK,KAAA,CAAVL,UAAU;UAAA,OAAQ;YAC5BC,WAAW,EAAE,SAAAA,YAAA;cAAA,OACXrB,IAAA,CAACf,MAAM;gBACLqC,KAAK,EAAC,MAAM;gBACZC,OAAO,EAAE,SAAAA,QAAA,EAAM;kBACbd,eAAe,CAAC,CAACD,YAAY,CAAC;gBAGhC;cAAE,EACM;YAAA;UAEd,CAAC;QAAA,CAAE;QACHkB,aAAa,EAAE;UACbjB,eAAe,EAAEA,eAAe;UAChCD,YAAY,EAAEA;QAChB;MAAE,EACF;IAAA;EACc,EACE;AAE1B;AAEA,IAAMmB,MAAM,GAAGzC,UAAU,CAAC0C,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}